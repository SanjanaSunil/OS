* Booting

The OS is a file located on a storage device (such as a hard disk)
booted by the BIOS on starting a computer. In order to do this, the
BIOS searches the first sector, known as the /boot sector/, usually
512 bytes. To ensure that the file is an operating system and not
data, the boot sector looks at the last two bytes of the sector. If
the last two bytes are *0xaa55*, it is an indicator that the file is
an OS and the BIOS loads it into the memory and instructs the CPU to
begin executing. 

** Example code of a boot sector 

Given is a simple example of code (hex encoding) for a boot sector:

#+BEGIN_SRC
e9 fd ff 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[ 29 lines of 16 bytes of zeroes each (making 512 bytes in total) ]
00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa
#+END_SRC

Note how the last two bytes make up the signature of the boot sector
that indicates it's an OS. Be careful - the x86 instruction set
architecture follows  [[https://stackoverflow.com/questions/5185551/why-is-x86-little-endian][little endian]].

The first three bytes *e9 fd ff* indicates an infinite loop - a jump
that jumps to itself. *e9* is opcode for =jmp= instruction. The number
*0xfffd* is -3 in decimal (signed 2's complement) and is the
offset. Since jump offsets start from the address of the next
instruction onwards, 3 bytes are jumped back again to *e9* long jump
instruction.

** Running the code 

The code above has been saved in =boot_sector.bin= [[https://github.com/SanjanaSunil/OS/blob/master/booting/boot_sector.bin][file]]. You can
write your own using a binary editor.

A CPU emulator that behaves like a specific architecture such as
Bochs, Qemu etc can be used to test programs.

Install Qemu and run the program using =qemu boot_sector.bin=. If that
command doesn't work, try =qemu-system-x86_64 boot_sector.bin= (for
64-bit systems) or =qemu-system-i386 boot_sector.bin= (for 32-bit
systems).

#+caption: Boot Sector with Infinite Loop
#+name: fig:boot-sect
[[./img/boot-sect-infinite-loop.png]]

The above window pops up. Nothing happens further because the system
is in an infinite loop. 

What happens if you change the last two bytes of the boot sector to
something else?

** Viewing the master boot record in your system

Try running the command given below on the terminal to view the boot
sector in Linux. 

#+BEGIN_SRC
sudo dd if=/dev/sda bs=512 count=1 | hexdump -C
#+END_SRC

Note the last two bytes of the output of the code! 

To view the master boot record on Windows or other operating systems,
refer [[https://www.techwalla.com/articles/how-to-view-the-contents-of-a-master-boot-record][this link]] or [[https://stackoverflow.com/questions/21647752/how-to-read-the-mbr-master-boot-record-in-c][here]].





 

